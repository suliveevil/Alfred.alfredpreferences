<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.hackerboard</string>
	<key>connections</key>
	<dict>
		<key>246A2126-9C2B-44FE-A0D2-3DCB7242106A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>4C07ED7A-B1EE-43C3-A0F1-E51524840687</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>405A5631-368D-42C7-A0F6-6E38B36037E3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>4C07ED7A-B1EE-43C3-A0F1-E51524840687</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>50B4021B-BEB3-47B4-AE36-70254E107434</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>C8566DFE-2E05-46C9-BA2A-9F356853863C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>66C135C9-4618-4419-85DF-78138B91ADEF</key>
		<array/>
		<key>81D415C5-CA65-4F79-9F94-BC4161B14D81</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>50B4021B-BEB3-47B4-AE36-70254E107434</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<true/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>66C135C9-4618-4419-85DF-78138B91ADEF</string>
				<key>modifiers</key>
				<integer>262144</integer>
				<key>modifiersubtext</key>
				<string>Copy link to clipboard.</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F6323018-6935-42CC-BD9A-089C72327136</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>50B4021B-BEB3-47B4-AE36-70254E107434</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>66C135C9-4618-4419-85DF-78138B91ADEF</string>
				<key>modifiers</key>
				<integer>262144</integer>
				<key>modifiersubtext</key>
				<string>Copy link to clipboard.</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Front page news from web community sources</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>HackerBoard</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>{query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>50B4021B-BEB3-47B4-AE36-70254E107434</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>hn</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Getting news…</string>
				<key>script</key>
				<string>./hackerboard hackernews</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Hacker News</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>81D415C5-CA65-4F79-9F94-BC4161B14D81</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  readonly local notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  readonly local terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>C8566DFE-2E05-46C9-BA2A-9F356853863C</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>pbp</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Getting news…</string>
				<key>script</key>
				<string>./hackerboard pinboard</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Pinboard Popular</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>F6323018-6935-42CC-BD9A-089C72327136</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<false/>
				<key>clipboardtext</key>
				<string>{query}</string>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>66C135C9-4618-4419-85DF-78138B91ADEF</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>lists=('pinboard' 'hackernews')

for list in "${lists[@]}"; do
  ./hackerboard "${list}" update_list
done</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>4C07ED7A-B1EE-43C3-A0F1-E51524840687</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>update_lists</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>246A2126-9C2B-44FE-A0D2-3DCB7242106A</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>:hackerboardforceupdatelists</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Force update of HackerBoard lists</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>405A5631-368D-42C7-A0F6-6E38B36037E3</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Get the latest Hacker News (`hn`) and Pinboard Popular (`pbp`) links.

![](https://i.imgur.com/yfvchcQ.png)
![](https://i.imgur.com/jVSxhmA.png)

Action any link to open it in the background in your default web browser. Action it with ⌃ to copy it to the clipboard. If listing Hacker News links, actioning with ⌥ will open the comments thread (set the `hn_main` Workflow Environment Variable to `comments` to invert this behaviour).

Lists are updated automatically and cached. To force the lists to update, run `:hackerboardforceupdatelists`.

![](https://i.imgur.com/BJbKPJe.png)</string>
	<key>uidata</key>
	<dict>
		<key>246A2126-9C2B-44FE-A0D2-3DCB7242106A</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>260</integer>
		</dict>
		<key>405A5631-368D-42C7-A0F6-6E38B36037E3</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>380</integer>
		</dict>
		<key>4C07ED7A-B1EE-43C3-A0F1-E51524840687</key>
		<dict>
			<key>xpos</key>
			<integer>410</integer>
			<key>ypos</key>
			<integer>260</integer>
		</dict>
		<key>50B4021B-BEB3-47B4-AE36-70254E107434</key>
		<dict>
			<key>xpos</key>
			<integer>410</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>66C135C9-4618-4419-85DF-78138B91ADEF</key>
		<dict>
			<key>xpos</key>
			<integer>410</integer>
			<key>ypos</key>
			<integer>140</integer>
		</dict>
		<key>81D415C5-CA65-4F79-9F94-BC4161B14D81</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>C8566DFE-2E05-46C9-BA2A-9F356853863C</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>600</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>F6323018-6935-42CC-BD9A-089C72327136</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>140</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>hn_main</key>
		<string></string>
	</dict>
	<key>variablesdontexport</key>
	<array>
		<string>hn_main</string>
	</array>
	<key>version</key>
	<string>1.1.0</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
