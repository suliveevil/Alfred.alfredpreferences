#!/usr/bin/env ruby

require 'cgi'
require 'json'
require 'open-uri'
require 'nokogiri'

def no_results(query)
  puts({ items: [title: "No results found for “#{query}”"] }.to_json)
  exit 0
end

search_query = ARGV[0]
escaped_query = CGI.escape(search_query)
base_url = 'https://www.metacritic.com'
site_url = "#{base_url}/search/all/#{escaped_query}/results"

results = Nokogiri::HTML(open(site_url, 'User-Agent' => 'chrome')).at('ul.search_results')
no_results(search_query) if results.nil?

script_filter_items = []

results.css('li.result').each do |result|
  next if result.at('span.metascore_w').nil?
  info = result.at('.basic_stats')
  synopsis = result.at('p.deck.basic_stat').text.strip rescue 'No synopsis available.'
  score = info.at('span.metascore_w').text
  score_type = info.at('span.metascore_w').attr('class').match(%r{(positive|mixed|negative)}).to_s
  title = info.at('h3.product_title > a').text.strip
  subtitle = info.at('p').text.gsub(%r{\s{2,}}, ' ').strip
  link = base_url + info.at('h3.product_title > a').attr('href')

  script_filter_items.push(title: title, subtitle: "#{score} / #{subtitle}", icon: { path: "#{score_type}.png" }, mods: { alt: { subtitle: synopsis } }, quicklookurl: link, arg: link)
end

no_results(search_query) if script_filter_items.empty?

puts({ items: script_filter_items }.to_json)
